import cron from 'node-cron';
import linkMonitorModel from '../models/linkMonitor.model.js';
import { sendTelegram } from '../index.js';
import { config } from 'dotenv';
config();

export const startCron = () => {
  console.log('–ö—Ä–æ–Ω –∑–∞–ø—É—â–µ–Ω üöÄ');
  cron.schedule('*/20 * * * *', () => {
    console.log('–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–º–µ–Ω–æ–≤ –∫–∞–∂–¥—ã–µ 20 –º–∏–Ω—É—Ç üöÄ');
    chekLinks();
  });
};

const chekLinks = async () => {
  try {
    const links = await linkMonitorModel.find();

    if (!links.length) {
      return console.log('–ù–µ—Ç —Å—Å—ã–ª–æ–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏');
    }

    links.forEach(async ({ link, chat_id }) => {
      try {
        const res = await fetch(link);
        const status = await res.status;

        if (status !== 200) {
          sendTelegram(
            process.env.LINK_MONITOR_BOT,
            chat_id,
            `–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ.\n–°—Å—ã–ª–∫–∞:${link}\n–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: ${status}`
          );
        }
      } catch (err) {
        if (err) {
          console.log(err.message);
        }
      }
    });
  } catch (err) {
    if (err) {
      console.log(err);
    }
  }
};
